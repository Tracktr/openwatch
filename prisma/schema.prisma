// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id           Int                 @id @default(autoincrement())
  title        String
  releaseYear  Int
  availability MovieAvailability[]
}

model StreamingService {
  id           Int                 @id @default(autoincrement())
  name         String
  logoUrl      String
  availability MovieAvailability[]
}

model MovieAvailability {
  id                 Int              @id @default(autoincrement())
  movie              Movie            @relation(fields: [movieId], references: [id])
  movieId            Int
  streamingService   StreamingService @relation(fields: [streamingServiceId], references: [id])
  streamingServiceId Int
  country            String

  @@unique([movieId, streamingServiceId, country])
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  googleId     String?       @unique
  applications Application[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Application {
  id        String   @id @default(uuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ApiKey    ApiKey?  @relation(fields: [apiKeyId], references: [id])
  apiKeyId  Int?
}

model ApiKey {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  createdAt DateTime @default(now())

  Application Application[]
}
